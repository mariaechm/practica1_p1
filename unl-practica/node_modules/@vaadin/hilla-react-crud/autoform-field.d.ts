import { type Validator } from '@vaadin/hilla-lit-form';
import type { FieldDirectiveResult, UseFormResult } from '@vaadin/hilla-react-form';
import { type CSSProperties, type JSX } from 'react';
import type { PropertyInfo } from './model-info.js';
export type AutoFormFieldProps = Readonly<{
    propertyInfo: PropertyInfo;
    form: UseFormResult<any>;
    options: FieldOptions;
    disabled?: boolean;
}>;
type CustomFormFieldProps = FieldDirectiveResult & Readonly<{
    label?: string;
    disabled?: boolean;
}>;
export type FieldOptions = Readonly<{
    id?: string;
    className?: string;
    style?: CSSProperties;
    label?: string;
    placeholder?: string;
    helperText?: string;
    colspan?: number;
    disabled?: boolean;
    readonly?: boolean;
    element?: JSX.Element;
    renderer?(props: {
        field: CustomFormFieldProps;
    }): JSX.Element;
    validators?: Validator[];
}>;
export declare function AutoFormField(props: AutoFormFieldProps): JSX.Element | null;
export {};
