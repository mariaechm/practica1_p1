{"version":3,"file":"locale.js","sourceRoot":"","sources":["src/locale.ts"],"names":[],"mappings":"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","sourcesContent":["import { DatePickerElement, type DatePickerDate, type DatePickerI18n } from '@vaadin/react-components/DatePicker.js';\nimport { DateTimePickerElement, type DateTimePickerI18n } from '@vaadin/react-components/DateTimePicker.js';\nimport { createContext, useContext, useMemo } from 'react';\n\nexport const LocaleContext = createContext(navigator.language);\n\nfunction getFormatRegex(format: Intl.DateTimeFormat) {\n  const sampleDate = new Date(1234, 5 - 1, 6);\n  const formattedSample = format.format(sampleDate);\n  const pattern = formattedSample\n    .replace('1234', '(?<year>\\\\d+)')\n    .replace('05', '(?<month>\\\\d+)')\n    .replace('5', '(?<month>\\\\d+)')\n    .replace('06', '(?<day>\\\\d+)')\n    .replace('6', '(?<day>\\\\d+)');\n\n  return new RegExp(pattern, 'u');\n}\n\nfunction tryFormatDate(formatter: Intl.DateTimeFormat, value?: string): string {\n  try {\n    return value ? formatter.format(new Date(value)) : '';\n  } catch {\n    return '';\n  }\n}\n\nexport class LocaleFormatter {\n  readonly #date: Intl.DateTimeFormat;\n  readonly #localTime: Intl.DateTimeFormat;\n  readonly #localDateTime: Intl.DateTimeFormat;\n  readonly #integer: Intl.NumberFormat;\n  readonly #decimal: Intl.NumberFormat;\n  readonly #parsePattern: RegExp;\n\n  constructor(locale?: string) {\n    this.#date = new Intl.DateTimeFormat(locale);\n\n    this.#localTime = new Intl.DateTimeFormat(locale, {\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n\n    this.#localDateTime = new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'numeric',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n\n    this.#integer = new Intl.NumberFormat(locale, {\n      maximumFractionDigits: 0,\n    });\n\n    this.#decimal = new Intl.NumberFormat(locale, {\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2,\n    });\n\n    this.#parsePattern = getFormatRegex(this.#date);\n  }\n\n  formatDate(value?: string): string;\n  formatDate(value: DatePickerDate): string;\n  formatDate(value?: DatePickerDate | string): string {\n    if (typeof value === 'object') {\n      const { year, month, day } = value;\n      const date = new Date();\n      date.setFullYear(year, month, day);\n      return this.#date.format(date);\n    }\n\n    return tryFormatDate(this.#date, value);\n  }\n\n  formatLocalTime(value?: string): string {\n    return tryFormatDate(this.#localTime, `2000-01-01T${value}`);\n  }\n\n  formatLocalDateTime(value?: string): string {\n    return tryFormatDate(this.#localDateTime, value);\n  }\n\n  formatInteger(value?: number): string {\n    return value && Number.isFinite(value) ? this.#integer.format(value) : '';\n  }\n\n  formatDecimal(value?: number): string {\n    return value && Number.isFinite(value) ? this.#decimal.format(value) : '';\n  }\n\n  parse(dateString: string): DatePickerDate | undefined {\n    const match = this.#parsePattern.exec(dateString);\n    const year = Number(match?.groups?.year);\n    const month = Number(match?.groups?.month) - 1;\n    const day = Number(match?.groups?.day);\n\n    // Verify that the parsed date is valid\n    const dateInstance = new Date();\n    dateInstance.setFullYear(year, month, day);\n\n    if (dateInstance.getFullYear() !== year || dateInstance.getMonth() !== month || dateInstance.getDate() !== day) {\n      return undefined;\n    }\n\n    return { year, month, day };\n  }\n}\n\nexport function useLocaleFormatter(): LocaleFormatter {\n  const locale = useContext(LocaleContext);\n  return useMemo(() => new LocaleFormatter(locale), [locale]);\n}\n\nconst defaultDatePickerI18n = new DatePickerElement().i18n;\n\nexport function useDatePickerI18n(): DatePickerI18n {\n  const formatter = useLocaleFormatter();\n\n  return useMemo(\n    () => ({\n      ...defaultDatePickerI18n,\n      formatDate(value) {\n        return formatter.formatDate(value);\n      },\n      parseDate(value) {\n        return formatter.parse(value);\n      },\n    }),\n    [formatter],\n  );\n}\n\nconst defaultDateTimePickerI18n = new DateTimePickerElement().i18n;\n\nexport function useDateTimePickerI18n(): DateTimePickerI18n {\n  const datePickerI18n = useDatePickerI18n();\n\n  return useMemo(\n    () => ({\n      ...defaultDateTimePickerI18n,\n      ...datePickerI18n,\n    }),\n    [datePickerI18n],\n  );\n}\n"]}