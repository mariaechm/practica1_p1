{"version":3,"file":"autogrid-columns.js","sourceRoot":"","sources":["src/autogrid-columns.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { GridColumnProps } from '@vaadin/react-components/GridColumn.js';\nimport {\n  AutoGridBooleanRenderer,\n  AutoGridDateRenderer,\n  AutoGridDateTimeRenderer,\n  AutoGridDecimalRenderer,\n  AutoGridEnumRenderer,\n  AutoGridIntegerRenderer,\n  AutoGridJsonRenderer,\n  AutoGridTimeRenderer,\n} from './autogrid-renderers';\nimport {\n  BooleanHeaderFilter,\n  DateHeaderFilter,\n  EnumHeaderFilter,\n  type HeaderFilterProps,\n  NoHeaderFilter,\n  NumberHeaderFilter,\n  StringHeaderFilter,\n  TimeHeaderFilter,\n} from './header-filter';\nimport type { PropertyInfo } from './model-info';\n\nexport type ColumnOptions = HeaderFilterProps & Omit<GridColumnProps<any>, 'dangerouslySetInnerHTML'>;\n\n// eslint-disable-next-line consistent-return\nfunction getTypeColumnOptions(propertyInfo: PropertyInfo, customColumnOptions?: ColumnOptions): ColumnOptions {\n  // eslint-disable-next-line default-case\n  switch (propertyInfo.type) {\n    case 'integer':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridIntegerRenderer,\n        headerFilterRenderer: NumberHeaderFilter,\n      };\n    case 'decimal':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridDecimalRenderer,\n        headerFilterRenderer: NumberHeaderFilter,\n      };\n    case 'boolean':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridBooleanRenderer,\n        headerFilterRenderer: BooleanHeaderFilter,\n      };\n    case 'date':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridDateRenderer,\n        headerFilterRenderer: DateHeaderFilter,\n      };\n    case 'time':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridTimeRenderer,\n        headerFilterRenderer: TimeHeaderFilter,\n      };\n    case 'datetime':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridDateTimeRenderer,\n        headerFilterRenderer: DateHeaderFilter,\n      };\n    case 'enum':\n      return {\n        autoWidth: true,\n        renderer: AutoGridEnumRenderer,\n        headerFilterRenderer: EnumHeaderFilter,\n      };\n    case 'string':\n      return {\n        autoWidth: true,\n        headerFilterRenderer: StringHeaderFilter,\n      };\n    case 'object':\n      return {\n        autoWidth: true,\n        renderer:\n          customColumnOptions?.path !== undefined && customColumnOptions.renderer == null ? null : AutoGridJsonRenderer,\n        headerFilterRenderer: NoHeaderFilter,\n      };\n    default:\n      return {\n        autoWidth: true,\n        headerFilterRenderer: NoHeaderFilter,\n      };\n  }\n}\n\nexport function getColumnOptions(\n  propertyInfo: PropertyInfo,\n  customColumnOptions: ColumnOptions | undefined,\n): ColumnOptions {\n  const typeColumnOptions = getTypeColumnOptions(propertyInfo, customColumnOptions);\n  const headerFilterRenderer =\n    customColumnOptions?.filterable === false\n      ? NoHeaderFilter\n      : (typeColumnOptions.headerFilterRenderer ?? NoHeaderFilter);\n  // TODO: Remove eslint-disable when all TypeScript version issues are resolved\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  return customColumnOptions\n    ? { ...typeColumnOptions, headerFilterRenderer, ...customColumnOptions }\n    : typeColumnOptions;\n}\n"]}