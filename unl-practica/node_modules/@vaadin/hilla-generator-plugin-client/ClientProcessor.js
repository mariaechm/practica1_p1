import createFullyUniqueIdentifier from "@vaadin/hilla-generator-utils/createFullyUniqueIdentifier.js";
import createSourceFile from "@vaadin/hilla-generator-utils/createSourceFile.js";
import DependencyManager from "@vaadin/hilla-generator-utils/dependencies/DependencyManager.js";
import PathManager from "@vaadin/hilla-generator-utils/dependencies/PathManager.js";
import ts from "typescript";
export default class ClientProcessor {
	#owner;
	#outputPath;
	constructor(fileName, owner) {
		this.#outputPath = new PathManager({ extension: "ts" }).createRelativePath(fileName);
		this.#owner = owner;
	}
	process() {
		this.#owner.logger.debug(`Generating ${this.#outputPath}`);
		const { exports, imports, paths } = new DependencyManager(new PathManager({ extension: ".js" }));
		const clientClassId = imports.named.add(paths.createBareModulePath("@vaadin/hilla-frontend", false), "ConnectClient");
		const clientVarId = createFullyUniqueIdentifier("client");
		exports.default.set(clientVarId);
		const declaration = ts.factory.createVariableStatement(undefined, ts.factory.createVariableDeclarationList([ts.factory.createVariableDeclaration(clientVarId, undefined, undefined, ts.factory.createNewExpression(clientClassId, undefined, [ts.factory.createObjectLiteralExpression([ts.factory.createPropertyAssignment(ts.factory.createIdentifier("prefix"), ts.factory.createStringLiteral("connect"))], false)]))], ts.NodeFlags.Const));
		return createSourceFile([
			...imports.toCode(),
			declaration,
			...exports.toCode()
		], this.#outputPath);
	}
}
//# sourceMappingURL=./ClientProcessor.js.map