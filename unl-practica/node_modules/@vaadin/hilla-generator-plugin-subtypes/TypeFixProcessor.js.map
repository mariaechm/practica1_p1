{"mappings":"AAAA,OAAO,yEAA0E;AACjF,OAAO,oBAA0C;AACjD,SAAS,wCAAyC;AAElD,OAAO,MAAM,iBAAiB;CAC5B,AAASA;CACT,AAASC;CAET,YAAYC,QAAuBC,WAAmB;AACpD,OAAKH,UAAU;AACf,OAAKC,aAAa;CACnB;CAED,UAAsB;EACpB,MAAM,aAAa,KAAKD,QAAQ,WAAW,IAAI,CAAC,cAAc;AAE5D,OAAI,GAAG,uBAAuB,UAAU,EAAE;IACxC,MAAM,UAAU,UAAU,QAAQ,IAAI,CAAC,WAAW;AAEhD,SAAI,GAAG,oBAAoB,OAAO,IAAI,qBAAqB,OAAO,KAAK,KAAK,SAAS;AACnF,aAAO,GAAG,QAAQ,wBAChB,WACA,GAAG,QAAQ,oBAAoB,QAAQ,EACvC,WACA,GAAG,QAAQ,sBAAsB,GAAG,QAAQ,oBAAoB,KAAKC,WAAW,CAAC,CAClF;KACF;AAED,YAAO;IACR,EAAC;AAEF,WAAO,GAAG,QAAQ,2BAChB,UAAU,WACV,UAAU,MACV,UAAU,gBACV,UAAU,iBACV,QACD;GACF;AAED,UAAO;EACR,EAAC;AAEF,SAAO,iBAAiB,YAAY,KAAKD,QAAQ,SAAS;CAC3D;AACF","names":["#source","#typeValue","source: ts.SourceFile","typeValue: string"],"sources":["/opt/agent/work/1af72d8adc613024/hilla/packages/ts/generator-plugin-subtypes/src/TypeFixProcessor.ts"],"sourcesContent":["import createSourceFile from '@vaadin/hilla-generator-utils/createSourceFile.js';\nimport ts, { type SourceFile } from 'typescript';\nimport { propertyNameToString } from './utils.js';\n\nexport class TypeFixProcessor {\n  readonly #source: SourceFile;\n  readonly #typeValue: string;\n\n  constructor(source: ts.SourceFile, typeValue: string) {\n    this.#source = source;\n    this.#typeValue = typeValue;\n  }\n\n  process(): SourceFile {\n    const statements = this.#source.statements.map((statement) => {\n      // search in the interface definition\n      if (ts.isInterfaceDeclaration(statement)) {\n        const members = statement.members.map((member) => {\n          // search for the @type property and replace it with a quoted string\n          if (ts.isPropertySignature(member) && propertyNameToString(member.name) === '@type') {\n            return ts.factory.createPropertySignature(\n              undefined,\n              ts.factory.createStringLiteral('@type'),\n              undefined,\n              ts.factory.createLiteralTypeNode(ts.factory.createStringLiteral(this.#typeValue)),\n            );\n          }\n\n          return member;\n        });\n\n        return ts.factory.createInterfaceDeclaration(\n          statement.modifiers,\n          statement.name,\n          statement.typeParameters,\n          statement.heritageClauses,\n          members,\n        );\n      }\n\n      return statement;\n    });\n\n    return createSourceFile(statements, this.#source.fileName);\n  }\n}\n"],"version":3}