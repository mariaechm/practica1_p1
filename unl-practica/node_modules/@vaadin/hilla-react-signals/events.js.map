{"version":3,"file":"events.js","sourceRoot":"","sources":["src/events.ts"],"names":[],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\n\nexport type StateEvent = Readonly<{\n  id: string;\n  type: string;\n  value: unknown;\n  accepted: boolean;\n  parentSignalId?: string;\n}>;\n\n/**\n * Creates a new state event type.\n */\ntype CreateStateEventType<V, T extends string, C extends Record<string, unknown> = Record<never, never>> = Readonly<{\n  type: T;\n  value: V;\n}> &\n  Readonly<C> &\n  StateEvent;\n\n/**\n * A state event received from the server describing the current state of the\n * signal.\n */\nexport type SnapshotStateEvent<T> = CreateStateEventType<T, 'snapshot'>;\n\n/**\n * A state event defines a new value of the signal shared with the server. The\n */\nexport type SetStateEvent<T> = CreateStateEventType<T, 'set'>;\n\nexport function createSetStateEvent<T>(value: T, signalId?: string, parentSignalId?: string): SetStateEvent<T> {\n  return {\n    id: signalId ?? nanoid(),\n    type: 'set',\n    value,\n    accepted: false,\n    ...(parentSignalId !== undefined ? { parentSignalId } : {}),\n  };\n}\n\nexport type ReplaceStateEvent<T> = CreateStateEventType<T, 'replace', { expected: T }>;\n\nexport function createReplaceStateEvent<T>(\n  expected: T,\n  value: T,\n  signalId?: string,\n  parentSignalId?: string,\n): ReplaceStateEvent<T> {\n  return {\n    id: signalId ?? nanoid(),\n    type: 'replace',\n    value,\n    expected,\n    accepted: false,\n    ...(parentSignalId !== undefined ? { parentSignalId } : {}),\n  };\n}\n\nexport type IncrementStateEvent = CreateStateEventType<number, 'increment'>;\n\nexport function createIncrementStateEvent(delta: number): IncrementStateEvent {\n  return {\n    id: nanoid(),\n    type: 'increment',\n    value: delta,\n    accepted: false,\n  };\n}\n\nexport type ListEntry<T> = Readonly<{\n  id: string;\n  prev?: string;\n  next?: string;\n  value: T;\n}>;\n\nexport type ListSnapshotStateEvent<T> = CreateStateEventType<never, 'snapshot', { entries: Array<ListEntry<T>> }>;\n\nexport type InsertLastStateEvent<T> = CreateStateEventType<T, 'insert', { position: 'last'; entryId?: string }>;\n\nexport function createInsertLastStateEvent<T>(value: T): InsertLastStateEvent<T> {\n  return {\n    id: nanoid(),\n    type: 'insert',\n    value,\n    position: 'last',\n    accepted: false,\n  };\n}\n\nexport type RemoveStateEvent = CreateStateEventType<never, 'remove', { entryId: string }>;\n\nexport function createRemoveStateEvent(entryId: string): RemoveStateEvent {\n  return {\n    id: nanoid(),\n    type: 'remove',\n    entryId,\n    value: undefined as never,\n    accepted: false,\n  };\n}\n\nfunction isStateEvent(event: unknown): event is StateEvent {\n  return (\n    typeof event === 'object' &&\n    event !== null &&\n    typeof (event as { id?: unknown }).id === 'string' &&\n    typeof (event as { type?: unknown }).type === 'string' &&\n    typeof (event as { value?: unknown }).value !== 'undefined' &&\n    typeof (event as { accepted?: unknown }).accepted === 'boolean'\n  );\n}\n\nexport function isSnapshotStateEvent<T>(event: unknown): event is SnapshotStateEvent<T> {\n  return isStateEvent(event) && event.type === 'snapshot';\n}\n\nexport function isSetStateEvent<T>(event: unknown): event is SetStateEvent<T> {\n  return isStateEvent(event) && event.type === 'set';\n}\n\nexport function isReplaceStateEvent<T>(event: unknown): event is ReplaceStateEvent<T> {\n  return (\n    isStateEvent(event) && typeof (event as { expected?: unknown }).expected !== 'undefined' && event.type === 'replace'\n  );\n}\n\nexport function isIncrementStateEvent(event: unknown): event is IncrementStateEvent {\n  return isStateEvent(event) && event.type === 'increment';\n}\n\nexport function isListSnapshotStateEvent<T>(event: unknown): event is ListSnapshotStateEvent<T> {\n  return (\n    typeof event === 'object' &&\n    event !== null &&\n    typeof (event as { id?: unknown }).id === 'string' &&\n    (event as { type?: unknown }).type === 'snapshot' &&\n    (event as { entries?: unknown }).entries instanceof Array &&\n    typeof (event as { accepted?: unknown }).accepted !== 'undefined'\n  );\n}\n\nexport function isInsertLastStateEvent<T>(event: unknown): event is InsertLastStateEvent<T> {\n  return isStateEvent(event) && event.type === 'insert' && (event as { position?: unknown }).position === 'last';\n}\n\nexport function isRemoveStateEvent(event: unknown): event is RemoveStateEvent {\n  return (\n    typeof event === 'object' &&\n    event !== null &&\n    typeof (event as { id?: unknown }).id === 'string' &&\n    (event as { type?: unknown }).type === 'remove' &&\n    typeof (event as { entryId?: unknown }).entryId === 'string' &&\n    typeof (event as { value?: unknown }).value === 'undefined'\n  );\n}\n"]}