import ts, {} from 'typescript';
export const defaultMediaType = 'application/json';
export function importBuiltInFormModel(specifier, { imports, paths }) {
    const modelPath = paths.createBareModulePath('@vaadin/hilla-lit-form', false);
    return imports.named.getIdentifier(modelPath, specifier) ?? imports.named.add(modelPath, specifier);
}
export function createModelBuildingCallback(name, args) {
    const defaults = [ts.factory.createIdentifier('parent'), ts.factory.createIdentifier('key')];
    return ts.factory.createArrowFunction(undefined, undefined, defaults.map((arg) => ts.factory.createParameterDeclaration(undefined, undefined, arg)), undefined, ts.factory.createToken(ts.SyntaxKind.EqualsGreaterThanToken), ts.factory.createNewExpression(name, undefined, [...defaults, ...args]));
}
export function createEmptyValueMaker(maker, model) {
    return ts.factory.createPropertyDeclaration([ts.factory.createModifier(ts.SyntaxKind.StaticKeyword), ts.factory.createModifier(ts.SyntaxKind.OverrideKeyword)], 'createEmptyValue', undefined, undefined, ts.factory.createCallExpression(maker, undefined, [model]));
}
//# sourceMappingURL=utils.js.map