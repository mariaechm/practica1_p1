{"version":3,"file":"BinderNode.js","sourceRoot":"","sources":["src/BinderNode.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */\n/*\n * Copyright 2000-2020 Vaadin Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n// TODO: Fix dependency cycle\n\nimport type { BinderRoot } from './BinderRoot.js';\nimport {\n  _createEmptyItemValue,\n  _key,\n  _parent,\n  _validators,\n  AbstractModel,\n  type ArrayItemModel,\n  ArrayModel,\n  getObjectModelOwnAndParentGetters,\n  ObjectModel,\n  type Value,\n} from './Models.js';\nimport type { ClassStaticProperties } from './types.js';\nimport type { Validator, ValueError } from './Validation.js';\nimport { ValidityStateValidator } from './Validators.js';\nimport { _validity } from './Validity.js';\n\nexport const _updateValidation = Symbol('updateValidation');\nexport const _update = Symbol('update');\nexport const _setErrorsWithDescendants = Symbol('setErrorsWithDescendants');\nexport const _clearValidation = Symbol('clearValidation');\n\nconst nodes = new WeakMap<AbstractModel, BinderNode>();\n\nexport function getBinderNode<M extends AbstractModel>(model: M): BinderNode<M> {\n  let node = nodes.get(model);\n\n  if (!node) {\n    node = new BinderNode(model);\n    nodes.set(model, node);\n  }\n\n  return node as BinderNode<M>;\n}\n\nfunction getErrorPropertyName(valueError: ValueError): string {\n  return typeof valueError.property === 'string' ? valueError.property : getBinderNode(valueError.property).name;\n}\n\nfunction updateObjectOrArrayKey<M extends AbstractModel>(\n  model: M,\n  value: Value<M>,\n  key: keyof any,\n  keyValue: unknown,\n): Value<M> {\n  if (model instanceof ObjectModel) {\n    // Value contained in object - replace object in parent\n    return {\n      ...(value as Record<never, never> & Value<M>),\n      [key]: keyValue,\n    };\n  }\n\n  if (keyValue === undefined) {\n    throw new TypeError('Unexpected undefined value');\n  }\n\n  if (model instanceof ArrayModel) {\n    // Value contained in array - replace array in parent\n    const array = (value as unknown[]).slice();\n    array[key as number] = keyValue;\n    return array as Value<M>;\n  }\n\n  throw new TypeError(`Unknown model type ${(model as AbstractModel).constructor.name}`);\n}\n\nexport const CHANGED = new Event('binder-node-changed');\n\nclass NotArrayModelError extends Error {\n  constructor() {\n    super('The model does not represent array');\n  }\n}\n\nclass NotArrayItemModelError extends Error {\n  constructor() {\n    super('The model does not represent array item');\n  }\n}\n\ndeclare class ArrayItemBinderNode<M extends AbstractModel> extends BinderNode<M> {\n  // @ts-expect-error: re-defining the parent getter.\n  declare readonly parent: BinderNode<ArrayModel<M>>;\n}\n\nconst defaultArrayItemCache = new WeakMap<BinderNode, unknown>();\n\n/**\n * The BinderNode\\<M\\> class provides the form binding related APIs\n * with respect to a particular model instance.\n *\n * Structurally, model instances form a tree, in which the object\n * and array models have child nodes of field and array item model\n * instances.\n */\nexport class BinderNode<M extends AbstractModel = AbstractModel> extends EventTarget {\n  declare readonly ['constructor']: ClassStaticProperties<typeof BinderNode<M>>;\n  readonly model: M;\n  /**\n   * The validity state read from the bound element, if any. Represents the\n   * HTML element internal validation.\n   *\n   * For elements with `validity.valid === false`, the value in the\n   * bound element is considered as invalid.\n   */\n  [_validity]?: ValidityState;\n  #ownErrors?: ReadonlyArray<ValueError<Value<M>>>;\n  #validators: ReadonlyArray<Validator<Value<M>>>;\n  readonly #validityStateValidator: ValidityStateValidator<Value<M>>;\n  #visited = false;\n\n  constructor(model: M) {\n    super();\n    this.model = model;\n    nodes.set(model, this);\n    this.#validityStateValidator = new ValidityStateValidator<Value<M>>();\n    this.#validators = model[_validators];\n\n    // Workaround for children initialization with private props\n    if (this.constructor === BinderNode) {\n      this.initializeValue();\n    }\n  }\n\n  /**\n   * The binder for the top-level model.\n   */\n  get binder(): BinderRoot {\n    const binder = this.parent?.binder;\n\n    if (!binder) {\n      throw new TypeError('BinderNode is detached');\n    }\n\n    return binder;\n  }\n\n  /**\n   * The default value related to the model\n   */\n  get defaultValue(): Value<M> | undefined {\n    const key = this.model[_key];\n    const parentDefaultValue = this.parent!.defaultValue as Readonly<Partial<Record<typeof key, Value<M>>>>;\n\n    if (this.#isArrayItem() && !(key in parentDefaultValue)) {\n      if (defaultArrayItemCache.has(this.parent)) {\n        return defaultArrayItemCache.get(this.parent) as Value<M>;\n      }\n\n      const value = this.model.constructor.createEmptyValue();\n      defaultArrayItemCache.set(this.parent, value);\n      return value as Value<M>;\n    }\n\n    return parentDefaultValue[key];\n  }\n\n  /**\n   * True if the current value is different from the defaultValue.\n   */\n  get dirty(): boolean {\n    return this.value !== this.defaultValue;\n  }\n\n  /**\n   * The combined array of all errors for this node’s model and all its nested\n   * models\n   */\n  get errors(): readonly ValueError[] {\n    return [...Array.from(this.#getChildBinderNodes(), (node) => node.errors).flat(), ...this.ownErrors];\n  }\n\n  /**\n   * Indicates if there is any error for the node's model.\n   */\n  get invalid(): boolean {\n    return this.errors.length > 0;\n  }\n\n  /**\n   * The name generated from the model structure, used to set the name\n   * attribute on the field components.\n   */\n  get name(): string {\n    let { model }: { model: AbstractModel } = this;\n    let name = '';\n\n    while (model[_parent] instanceof AbstractModel) {\n      name = `${String(model[_key])}${name ? `.${name}` : ''}`;\n      model = model[_parent];\n    }\n\n    return name;\n  }\n\n  /**\n   * The array of validation errors directly related with the model.\n   */\n  get ownErrors(): ReadonlyArray<ValueError<Value<M>>> {\n    return this.#ownErrors ? this.#ownErrors : [];\n  }\n\n  /**\n   * The parent node, if this binder node corresponds to a nested model,\n   * otherwise undefined for the top-level binder.\n   */\n  get parent(): BinderNode | undefined {\n    const modelParent = this.model[_parent];\n    return modelParent instanceof AbstractModel ? getBinderNode(modelParent) : undefined;\n  }\n\n  /**\n   * True if the value is required to be non-empty.\n   */\n  get required(): boolean {\n    return this.#validators.some((validator) => validator.impliesRequired);\n  }\n\n  /**\n   * The array of validators for the model. The default value is defined in the\n   * model.\n   */\n  get validators(): ReadonlyArray<Validator<Value<M>>> {\n    return this.#validators;\n  }\n\n  set validators(validators: ReadonlyArray<Validator<Value<M>>>) {\n    this.#validators = validators;\n    this.dispatchEvent(CHANGED);\n  }\n\n  /**\n   * The current value related to the model\n   */\n  get value(): Value<M> | undefined {\n    if (!this.parent) {\n      return undefined;\n    }\n\n    this.initializeValue();\n\n    const key = this.model[_key];\n\n    // The value of parent in unknown, so we need to cast it.\n    type ParentValue = Readonly<Record<typeof key, Value<M>>>;\n    return (this.parent.value as ParentValue)[key];\n  }\n\n  set value(value: Value<M> | undefined) {\n    this.initializeValue(true);\n    const oldValue = this.value;\n    if (value !== oldValue) {\n      this.#setValueState(value, undefined);\n      this[_updateValidation]().catch(() => {});\n    }\n  }\n\n  /**\n   * True if the bound field was ever focused and blurred by the user.\n   */\n  get visited(): boolean {\n    return this.#visited;\n  }\n\n  set visited(v: boolean) {\n    if (this.#visited !== v) {\n      this.#visited = v;\n      this.dispatchEvent(CHANGED);\n    }\n  }\n\n  /**\n   * A helper method to add a validator\n   *\n   * @param validator - a validator\n   */\n  addValidator(validator: Validator<Value<M>>): void {\n    this.validators = [...this.#validators, validator];\n    this.dispatchEvent(CHANGED);\n  }\n\n  /**\n   * Append an item to the array value.\n   *\n   * Requires the context model to be an array reference.\n   *\n   * @param item - optional new item value, an empty item is\n   * appended if the argument is omitted\n   */\n  appendItem(item?: Value<ArrayItemModel<M>>): void {\n    if (this.#isArray()) {\n      const itemValueOrEmptyValue = item ?? this.model[_createEmptyItemValue]();\n      const newValue = [...(this.value ?? []), itemValueOrEmptyValue];\n      const newDefaultValue = [...(this.defaultValue ?? []), itemValueOrEmptyValue];\n      this.#setValueState(newValue, newDefaultValue);\n    } else {\n      throw new NotArrayModelError();\n    }\n  }\n\n  /**\n   * Returns a binder node for the nested model instance.\n   *\n   * @param model - The nested model instance\n   */\n  for<N extends AbstractModel>(model: N): BinderNode<N> {\n    const binderNode = getBinderNode(model);\n    if (binderNode.binder !== this.binder) {\n      throw new Error('Unknown binder');\n    }\n\n    return binderNode;\n  }\n\n  prependItem(item?: Value<ArrayItemModel<M>>): void {\n    if (this.#isArray()) {\n      const itemValueOrEmptyValue = item ?? this.model[_createEmptyItemValue]();\n      const newValue = [itemValueOrEmptyValue, ...(this.value ?? [])];\n      const newDefaultValue = [itemValueOrEmptyValue, ...(this.defaultValue ?? [])];\n      this.#setValueState(newValue, newDefaultValue);\n    } else {\n      throw new NotArrayModelError();\n    }\n  }\n\n  removeSelf(): void {\n    if (this.#isArrayItem()) {\n      const newValue = (this.parent.value ?? []).filter((_, i) => i !== this.model[_key]);\n      const newDefaultValue = (this.parent.defaultValue ?? []).filter((_, i) => i !== this.model[_key]);\n      this.parent.#setValueState(newValue, newDefaultValue);\n    } else {\n      throw new NotArrayItemModelError();\n    }\n  }\n\n  /**\n   * Runs all validation callbacks potentially affecting this\n   * or any nested model. Returns the combined array of all\n   * errors as in the errors property.\n   */\n  async validate(): Promise<readonly ValueError[]> {\n    const errors = await Promise.all([\n      ...this.#requestValidationOfDescendants(),\n      ...this.#requestValidationWithAncestors(),\n    ]).then((arr) => arr.flat());\n    this[_setErrorsWithDescendants](errors.length ? errors : undefined);\n    this[_update]();\n    return errors;\n  }\n\n  protected [_clearValidation](): boolean {\n    if (this.#visited) {\n      this.#visited = false;\n      this.dispatchEvent(CHANGED);\n    }\n    let needsUpdate = false;\n    if (this.#ownErrors) {\n      this.#ownErrors = undefined;\n      needsUpdate = true;\n      this.dispatchEvent(CHANGED);\n    }\n    if ([...this.#getChildBinderNodes()].filter((childBinderNode) => childBinderNode[_clearValidation]()).length > 0) {\n      needsUpdate = true;\n    }\n    return needsUpdate;\n  }\n\n  protected [_setErrorsWithDescendants](errors?: readonly ValueError[]): void {\n    const { name } = this;\n    const ownErrors = errors\n      ? (errors.filter((valueError) => getErrorPropertyName(valueError) === name) as ReadonlyArray<\n          ValueError<Value<M>>\n        >)\n      : undefined;\n    const relatedErrors = errors\n      ? errors.filter((valueError) => getErrorPropertyName(valueError).startsWith(name))\n      : undefined;\n    this.#ownErrors = ownErrors;\n    for (const childBinderNode of this.#getChildBinderNodes()) {\n      childBinderNode[_setErrorsWithDescendants](relatedErrors);\n    }\n    this.dispatchEvent(CHANGED);\n  }\n\n  protected [_update](_?: Value<M>): void {\n    if (this.parent) {\n      this.parent[_update]();\n    }\n  }\n\n  protected async [_updateValidation](): Promise<void> {\n    if (this.invalid) {\n      await this.validate();\n    }\n  }\n\n  *#getChildBinderNodes(): Generator<BinderNode, void, void> {\n    if (this.value === undefined || this.defaultValue === undefined) {\n      // Undefined value cannot have child properties and items.\n      return;\n    }\n\n    if (this.#isObject()) {\n      for (const [, getter] of getObjectModelOwnAndParentGetters(this.model)) {\n        const childModel = getter.call(this.model);\n        // We need to skip all non-initialised optional fields here in order\n        // to prevent infinite recursion for circular references in the model.\n        // Here we rely on presence of keys in `defaultValue` to detect all\n        // initialised fields. The keys in `defaultValue` are defined for all\n        // non-optional fields plus those optional fields whose values were\n        // set from initial `binder.read()` or `binder.clear()` or by using a\n        // binder node (e.g., form binding) for a nested field.\n        if (childModel[_key] in (this.defaultValue as Record<never, never>)) {\n          yield getBinderNode(childModel);\n        }\n      }\n    } else if (this.#isArray()) {\n      for (const childBinderNode of this.model) {\n        yield childBinderNode;\n      }\n    }\n  }\n\n  #isArray(): this is BinderNode<ArrayModel> {\n    return this.model instanceof ArrayModel;\n  }\n\n  #isArrayItem(): this is ArrayItemBinderNode<M> {\n    return this.model[_parent] instanceof ArrayModel;\n  }\n\n  #isObject(): this is BinderNode<ObjectModel> {\n    return this.model instanceof ObjectModel;\n  }\n\n  *#requestValidationOfDescendants(): Generator<Promise<readonly ValueError[]>, void, void> {\n    for (const node of this.#getChildBinderNodes()) {\n      yield* node.#runOwnValidators();\n      yield* node.#requestValidationOfDescendants();\n    }\n  }\n\n  *#requestValidationWithAncestors(): Generator<Promise<readonly ValueError[]>, void, void> {\n    yield* this.#runOwnValidators();\n\n    if (this.parent) {\n      yield* this.parent.#requestValidationWithAncestors();\n    }\n  }\n\n  *#runOwnValidators(): Generator<Promise<readonly ValueError[]>, void, void> {\n    const hasInvalidState = this[_validity] && !this[_validity].valid;\n    const hasBadInput = !!this[_validity]?.badInput;\n\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    if ((hasInvalidState && !hasBadInput) || !hasInvalidState) {\n      for (const validator of this.#validators) {\n        yield this.binder.requestValidation(this.model, validator);\n      }\n    }\n\n    if (hasInvalidState) {\n      yield this.binder.requestValidation(this.model, this.#validityStateValidator);\n    }\n  }\n\n  initializeValue(forceInitialize = false): void {\n    // First, make sure parents have value initialized\n    if (\n      this.parent &&\n      (this.parent.value === undefined || (this.parent.defaultValue as Value<M> | undefined) === undefined)\n    ) {\n      this.parent.initializeValue(true);\n    }\n\n    const key = this.model[_key];\n    let value: Value<M> | undefined = this.parent\n      ? (this.parent.value as Record<typeof key, Value<M>>)[this.model[_key]]\n      : undefined;\n\n    const defaultValue: Value<M> | undefined = this.parent\n      ? (this.parent.defaultValue as Readonly<Record<typeof key, Value<M>>>)[this.model[_key]]\n      : undefined;\n\n    if (value === undefined) {\n      // Initialize value if this is the root level node, or it is enforced\n      if (forceInitialize || !this.parent) {\n        value = this.model.constructor.createEmptyValue() as Value<M>;\n        this.#setValueState(value, defaultValue === undefined ? value : defaultValue);\n      } else if (\n        this.parent.model instanceof ObjectModel &&\n        !(key in ((this.parent.value || {}) as Partial<Record<typeof key, Value<M>>>))\n      ) {\n        this.#setValueState(undefined, defaultValue === undefined ? value : defaultValue);\n      }\n    }\n  }\n\n  #setValueState(value: Value<M> | undefined, defaultValue: Value<M> | undefined): void {\n    const { parent } = this;\n    if (parent) {\n      const key = this.model[_key];\n      const parentValue = updateObjectOrArrayKey(parent.model, parent.value, key, value);\n      const keepPristine = value === defaultValue && parent.value === parent.defaultValue;\n      if (keepPristine) {\n        // Keep value and defaultValue equal, so that `dirty` stays false\n        parent.#setValueState(parentValue, parentValue);\n      } else if (defaultValue !== undefined) {\n        // Update value and defaultValue at the same time with different content\n        const parentDefaultValue = updateObjectOrArrayKey(parent.model, parent.defaultValue, key, defaultValue);\n        parent.#setValueState(parentValue, parentDefaultValue);\n      } else {\n        parent.#setValueState(parentValue, undefined);\n      }\n    } else {\n      // Root level model - update the binder root\n      const binder = this as unknown as BinderRoot<M>;\n      if (defaultValue !== undefined) {\n        binder.defaultValue = defaultValue;\n      }\n      binder.value = value!;\n    }\n  }\n}\n"]}