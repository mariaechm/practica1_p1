{"mappings":"AAKA,OAAO,mDAAoD;AAC3D,SAAS,oCAAqC;AAK9C,eAAe,MAAM,gCAAgC;CACnD,AAASA;CACT,AAASC;CACT,AAASC;CACT,AAASC;CACT,AAASC;CAGT,YACEC,MACAC,UACAC,mBACAC,eACAC,OACA;AACA,OAAKT,QAAQ;AACb,OAAKG,SAAS;AACd,OAAKF,gBAAgB;AACrB,OAAKG,YAAY,MAAM,SAAS,QAAQ,SAAS;AACjD,OAAKF,iBAAiB;CACvB;CAED,UAA+B;AAC7B,UAAQ,KAAKF,OAAb;GACE,KAAK,MACH,QAAO,KAAKU,YAAY;GAC1B;AACE,SAAKP,OAAO,OAAO,MAAM,iBAAiB,KAAKH,MAAM,oBAAoB;AACzE,WAAO,CAAE;EACZ;CACF;CAED,aAAkC;EAChC,MAAM,YAAY,KAAKI,UAAU,UAAU,mBAAmB;AAE9D,SAAO,YAAY,IAAI,oBAAoB,WAAW,KAAKH,eAAe,KAAKC,gBAAgB,SAAS,GAAG,CAAE;CAC9G;AACF","names":["#code","#dependencies","#transferTypes","#owner","#response","code: string","response: EndpointMethodResponses[string]","dependencyManager: DependencyManager","transferTypes: TransferTypes","owner: Plugin","#processOk"],"sources":["/opt/agent/work/1af72d8adc613024/hilla/packages/ts/generator-plugin-backbone/src/EndpointMethodResponseProcessor.ts"],"sourcesContent":["import type Plugin from '@vaadin/hilla-generator-core/Plugin.js';\nimport type { TransferTypes } from '@vaadin/hilla-generator-core/SharedStorage.js';\nimport type DependencyManager from '@vaadin/hilla-generator-utils/dependencies/DependencyManager.js';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport type { TypeNode } from 'typescript';\nimport TypeSchemaProcessor from './TypeSchemaProcessor.js';\nimport { defaultMediaType } from './utils.js';\n\nexport type EndpointMethodResponses = OpenAPIV3.ResponsesObject;\nexport type EndpointMethodResponse = OpenAPIV3.ResponseObject;\n\nexport default class EndpointMethodResponseProcessor {\n  readonly #code: string;\n  readonly #dependencies: DependencyManager;\n  readonly #transferTypes: TransferTypes;\n  readonly #owner: Plugin;\n  readonly #response: EndpointMethodResponse;\n\n  // eslint-disable-next-line @typescript-eslint/max-params\n  constructor(\n    code: string,\n    response: EndpointMethodResponses[string],\n    dependencyManager: DependencyManager,\n    transferTypes: TransferTypes,\n    owner: Plugin,\n  ) {\n    this.#code = code;\n    this.#owner = owner;\n    this.#dependencies = dependencyManager;\n    this.#response = owner.resolver.resolve(response);\n    this.#transferTypes = transferTypes;\n  }\n\n  process(): readonly TypeNode[] {\n    switch (this.#code) {\n      case '200':\n        return this.#processOk();\n      default:\n        this.#owner.logger.warn(`Response code '${this.#code} is not supported'`);\n        return [];\n    }\n  }\n\n  #processOk(): readonly TypeNode[] {\n    const rawSchema = this.#response.content?.[defaultMediaType]?.schema;\n\n    return rawSchema ? new TypeSchemaProcessor(rawSchema, this.#dependencies, this.#transferTypes).process() : [];\n  }\n}\n"],"version":3}