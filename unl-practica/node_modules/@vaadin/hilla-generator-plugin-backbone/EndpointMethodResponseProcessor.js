import TypeSchemaProcessor from "./TypeSchemaProcessor.js";
import { defaultMediaType } from "./utils.js";
export default class EndpointMethodResponseProcessor {
	#code;
	#dependencies;
	#transferTypes;
	#owner;
	#response;
	constructor(code, response, dependencyManager, transferTypes, owner) {
		this.#code = code;
		this.#owner = owner;
		this.#dependencies = dependencyManager;
		this.#response = owner.resolver.resolve(response);
		this.#transferTypes = transferTypes;
	}
	process() {
		switch (this.#code) {
			case "200": return this.#processOk();
			default:
				this.#owner.logger.warn(`Response code '${this.#code} is not supported'`);
				return [];
		}
	}
	#processOk() {
		const rawSchema = this.#response.content?.[defaultMediaType]?.schema;
		return rawSchema ? new TypeSchemaProcessor(rawSchema, this.#dependencies, this.#transferTypes).process() : [];
	}
}
//# sourceMappingURL=./EndpointMethodResponseProcessor.js.map