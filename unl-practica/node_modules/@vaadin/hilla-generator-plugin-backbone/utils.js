import { isAnyOfRuleComposedSchema } from "@vaadin/hilla-generator-core/Schema.js";
export const defaultMediaType = "application/json";
export function isSchemaWithTypeArguments(schema) {
	return "x-type-arguments" in schema;
}
export function isSchemaWithTypeParameters(schema) {
	return "x-type-parameters" in schema;
}
export function isSchemaWithTypeVariable(schema) {
	return "x-type-variable" in schema;
}
export function findTypeArguments(schema) {
	if (isSchemaWithTypeArguments(schema)) {
		return schema["x-type-arguments"];
	}
	if (isAnyOfRuleComposedSchema(schema)) {
		return schema.anyOf.find(isSchemaWithTypeArguments)?.["x-type-arguments"];
	}
	return undefined;
}
export function findTypeParameters(schema) {
	if (isSchemaWithTypeParameters(schema)) {
		return schema["x-type-parameters"];
	}
	return undefined;
}
export function findTypeVariable(schema) {
	if (isSchemaWithTypeVariable(schema)) {
		return schema["x-type-variable"];
	}
	return undefined;
}
//# sourceMappingURL=./utils.js.map