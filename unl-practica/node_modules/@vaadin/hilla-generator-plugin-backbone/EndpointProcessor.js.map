{"mappings":"AAEA,OAAO,yDAA0D;AACjE,OAAO,yEAA0E;AACjF,OAAO,wFAAyF;AAChG,OAAO,4EAA6E;AACpF,SAAS,gCAAiC;AAE1C,OAAO,6EAA8E;AAErF,eAAe,MAAM,kBAAkB;CACrC,aAAa,OACXA,MACAC,SACAC,SACAC,OAC4B;EAC5B,MAAM,WAAW,IAAI,kBAAkB,MAAM,SAAS,SAAS;AAC/D,WAASC,cAAc,QAAQ,QAAQ,IACrC,SAASA,cAAc,MAAM,mBAAmB,MAAM,aAAa,kBAAkB,QAAQ,UAAU,CAAC,EACxG,SACD;AACD,SAAO;CACR;CAED,AAASC,oBAAoB,IAAI,YAAY,EAAE,WAAW,KAAM;CAChE,AAASD,gBAAgB,IAAI,kBAAkB,IAAI,YAAY,EAAE,WAAW,MAAO;CACnF,AAASE;CACT,AAASC;CACT,AAASC;CACT,AAASC;CACT,AAASC;CAET,AAAQ,YACNV,MACAC,SACAC,SACAC,OACA;AACA,OAAKI,QAAQ;AACb,OAAKG,SAAS;AACd,OAAKJ,WAAW;AAChB,OAAKE,aAAa,QAAQ;AAC1B,OAAKC,iBAAiB,QAAQ;CAC/B;CAED,MAAM,UAA+B;AACnC,OAAKC,OAAO,OAAO,OAAO,uBAAuB,KAAKH,MAAM,EAAE;EAE9D,MAAM,aAAa,CACjB,MAAM,QAAQ,IAAI,MAAM,KAAK,KAAKD,UAAU,OAAO,CAAC,QAAQ,SAAS,KAAK,KAAKK,eAAe,QAAQ,SAAS,CAAC,CAAC,EACjH,QAAQ,CAAC,SAAS,KAAK;EAEzB,MAAM,EAAE,SAAS,SAAS,GAAG,KAAKP;AAElC,SAAO,iBACL;GAAC,GAAG,QAAQ,QAAQ;GAAE,GAAG;GAAY,GAAG,QAAQ,QAAQ;EAAC,GACzD,KAAKC,kBAAkB,mBAAmB,KAAKE,MAAM,CACtD;CACF;CAED,MAAMI,eAAeC,QAAgBC,UAAmE;AACtG,OAAKH,OAAO,OAAO,OAAO,8BAA8B,KAAKH,MAAM,GAAG,OAAO,EAAE;AAE/E,SAAO,CACL,MAAM,QAAQ,IACZ,OAAO,OAAO,UAAU,YAAY,CACjC,OAAO,CAAC,eAAe,SAAS,YAAY,CAC5C,IAAI,OAAO,eACV,iCAAiC,gBAC/B,YACA,KAAKA,OACL,QACA,SAAS,aACT,KAAKH,eACL,KAAKK,gBACL,KAAKC,OACN,EAAE,QAAQ,KAAKF,WAAW,CAC5B,CACJ,EACD,OAAO,QAAQ;CAClB;AACF","names":["name: string","methods: Map<string, OpenAPIV3.PathItemObject>","storage: SharedStorage","owner: Plugin","#dependencies","#createdFilePaths","#methods","#name","#outputDir","#transferTypes","#owner","#processMethod","method: string","pathItem: OpenAPIV3.PathItemObject"],"sources":["/opt/agent/work/1af72d8adc613024/hilla/packages/ts/generator-plugin-backbone/src/EndpointProcessor.ts"],"sourcesContent":["import type Plugin from '@vaadin/hilla-generator-core/Plugin.js';\nimport type { SharedStorage, TransferTypes } from '@vaadin/hilla-generator-core/SharedStorage.js';\nimport ClientPlugin from '@vaadin/hilla-generator-plugin-client';\nimport createSourceFile from '@vaadin/hilla-generator-utils/createSourceFile.js';\nimport DependencyManager from '@vaadin/hilla-generator-utils/dependencies/DependencyManager.js';\nimport PathManager from '@vaadin/hilla-generator-utils/dependencies/PathManager.js';\nimport { OpenAPIV3 } from 'openapi-types';\nimport type { SourceFile, Statement } from 'typescript';\nimport EndpointMethodOperationProcessor from './EndpointMethodOperationProcessor.js';\n\nexport default class EndpointProcessor {\n  static async create(\n    name: string,\n    methods: Map<string, OpenAPIV3.PathItemObject>,\n    storage: SharedStorage,\n    owner: Plugin,\n  ): Promise<EndpointProcessor> {\n    const endpoint = new EndpointProcessor(name, methods, storage, owner);\n    endpoint.#dependencies.imports.default.add(\n      endpoint.#dependencies.paths.createRelativePath(await ClientPlugin.getClientFileName(storage.outputDir)),\n      'client',\n    );\n    return endpoint;\n  }\n\n  readonly #createdFilePaths = new PathManager({ extension: 'ts' });\n  readonly #dependencies = new DependencyManager(new PathManager({ extension: '.js' }));\n  readonly #methods: Map<string, OpenAPIV3.PathItemObject>;\n  readonly #name: string;\n  readonly #outputDir: string | undefined;\n  readonly #transferTypes: TransferTypes;\n  readonly #owner: Plugin;\n\n  private constructor(\n    name: string,\n    methods: Map<string, OpenAPIV3.PathItemObject>,\n    storage: SharedStorage,\n    owner: Plugin,\n  ) {\n    this.#name = name;\n    this.#owner = owner;\n    this.#methods = methods;\n    this.#outputDir = storage.outputDir;\n    this.#transferTypes = storage.transferTypes;\n  }\n\n  async process(): Promise<SourceFile> {\n    this.#owner.logger.debug(`Processing endpoint: ${this.#name}`);\n\n    const statements = (\n      await Promise.all(Array.from(this.#methods, async ([method, pathItem]) => this.#processMethod(method, pathItem)))\n    ).flatMap((item) => item);\n\n    const { exports, imports } = this.#dependencies;\n\n    return createSourceFile(\n      [...imports.toCode(), ...statements, ...exports.toCode()],\n      this.#createdFilePaths.createRelativePath(this.#name),\n    );\n  }\n\n  async #processMethod(method: string, pathItem: OpenAPIV3.PathItemObject): Promise<readonly Statement[]> {\n    this.#owner.logger.debug(`Processing endpoint method: ${this.#name}.${method}`);\n\n    return (\n      await Promise.all(\n        Object.values(OpenAPIV3.HttpMethods)\n          .filter((httpMethod) => pathItem[httpMethod])\n          .map(async (httpMethod) =>\n            EndpointMethodOperationProcessor.createProcessor(\n              httpMethod,\n              this.#name,\n              method,\n              pathItem[httpMethod]!,\n              this.#dependencies,\n              this.#transferTypes,\n              this.#owner,\n            )?.process(this.#outputDir),\n          ),\n      )\n    ).filter(Boolean) as readonly Statement[];\n  }\n}\n"],"version":3}