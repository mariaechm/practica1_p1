{"mappings":"AAMA,eAAe,MAAe,OAAO;CACnC,AAAS;CACT,AAAS;CAET,YAAYA,UAA6BC,QAAuB;AAC9D,OAAK,SAAS,OAAO,IAAI,KAAK,YAAY,KAAK;AAC/C,OAAK,WAAW;CACjB;CAED,IAAI,OAAe;AACjB,SAAO,KAAK,YAAY;CACzB;AAKF","names":["resolver: ReferenceResolver","logger: LoggerFactory"],"sources":["/opt/agent/work/1af72d8adc613024/hilla/packages/ts/generator-core/src/Plugin.ts"],"sourcesContent":["import type LoggerFactory from '@vaadin/hilla-generator-utils/LoggerFactory.js';\nimport type { Logger } from '@vaadin/hilla-generator-utils/LoggerFactory.js';\nimport type { Constructor } from 'type-fest';\nimport type ReferenceResolver from './ReferenceResolver.js';\nimport type { SharedStorage } from './SharedStorage.js';\n\nexport default abstract class Plugin {\n  readonly resolver: ReferenceResolver;\n  readonly logger: Logger;\n\n  constructor(resolver: ReferenceResolver, logger: LoggerFactory) {\n    this.logger = logger.for(this.constructor.name);\n    this.resolver = resolver;\n  }\n\n  get name(): string {\n    return this.constructor.name;\n  }\n\n  abstract get path(): string;\n\n  abstract execute(storage: SharedStorage): Promise<void> | void;\n}\n\nexport type PluginConstructor = Constructor<Plugin, ConstructorParameters<typeof Plugin>>;\n"],"version":3}