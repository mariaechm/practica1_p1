import { basename, dirname } from "path";
import createSourceFile from "@vaadin/hilla-generator-utils/createSourceFile.js";
import DependencyManager from "@vaadin/hilla-generator-utils/dependencies/DependencyManager.js";
import PathManager from "@vaadin/hilla-generator-utils/dependencies/PathManager.js";
export default class BarrelProcessor {
	static BARREL_FILE_NAME = "endpoints";
	#endpoints;
	#outputPathManager = new PathManager({ extension: "ts" });
	#owner;
	constructor(endpoints, owner) {
		this.#endpoints = endpoints;
		this.#owner = owner;
	}
	process() {
		this.#owner.logger.debug(`Generating '${this.constructor.BARREL_FILE_NAME}.ts' file`);
		const { exports, imports } = this.#endpoints.reduce((acc, { fileName }) => {
			const specifier = basename(fileName, ".ts");
			const path = `${dirname(fileName)}/${specifier}`;
			const id = acc.imports.namespace.add(acc.paths.createRelativePath(path), specifier);
			acc.exports.named.add(specifier, false, id);
			return acc;
		}, new DependencyManager(new PathManager({ extension: ".js" })));
		return createSourceFile([...imports.toCode(), ...exports.toCode()], this.#outputPathManager.createRelativePath(this.constructor.BARREL_FILE_NAME));
	}
}
//# sourceMappingURL=./BarrelProcessor.js.map