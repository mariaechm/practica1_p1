{"mappings":"AAAA,SAAS,UAAU,qBAAsB;AAEzC,OAAO,yEAA0E;AACjF,OAAO,wFAAyF;AAChG,OAAO,4EAA6E;AAGpF,eAAe,MAAM,gBAAgB;CACnC,OAAgB,mBAAmB;CAEnC,AAASA;CACT,AAASC,qBAAqB,IAAI,YAAY,EAAE,WAAW,KAAM;CACjE,AAASC;CAET,YAAYC,WAAkCC,OAAe;AAC3D,OAAKJ,aAAa;AAClB,OAAKE,SAAS;CACf;CAED,UAAsB;AACpB,OAAKA,OAAO,OAAO,OAAO,cAAc,KAAK,YAAY,iBAAiB,WAAW;EAErF,MAAM,EAAE,SAAS,SAAS,GAAG,KAAKF,WAAW,OAC3C,CAAC,KAAK,EAAE,UAAU,KAAK;GACrB,MAAM,YAAY,SAAS,UAAU,MAAM;GAC3C,MAAM,QAAQ,EAAE,QAAQ,SAAS,CAAC,GAAG,UAAU;GAE/C,MAAM,KAAK,IAAI,QAAQ,UAAU,IAAI,IAAI,MAAM,mBAAmB,KAAK,EAAE,UAAU;AACnF,OAAI,QAAQ,MAAM,IAAI,WAAW,OAAO,GAAG;AAE3C,UAAO;EACR,GACD,IAAI,kBAAkB,IAAI,YAAY,EAAE,WAAW,MAAO,IAC3D;AAED,SAAO,iBACL,CAAC,GAAG,QAAQ,QAAQ,EAAE,GAAG,QAAQ,QAAQ,AAAC,GAC1C,KAAKC,mBAAmB,mBAAmB,KAAK,YAAY,iBAAiB,CAC9E;CACF;AACF","names":["#endpoints","#outputPathManager","#owner","endpoints: readonly SourceFile[]","owner: Plugin"],"sources":["/opt/agent/work/1af72d8adc613024/hilla/packages/ts/generator-plugin-barrel/src/BarrelProcessor.ts"],"sourcesContent":["import { basename, dirname } from 'path';\nimport type Plugin from '@vaadin/hilla-generator-core/Plugin.js';\nimport createSourceFile from '@vaadin/hilla-generator-utils/createSourceFile.js';\nimport DependencyManager from '@vaadin/hilla-generator-utils/dependencies/DependencyManager.js';\nimport PathManager from '@vaadin/hilla-generator-utils/dependencies/PathManager.js';\nimport type { SourceFile } from 'typescript';\n\nexport default class BarrelProcessor {\n  static readonly BARREL_FILE_NAME = 'endpoints';\n  declare ['constructor']: typeof BarrelProcessor;\n  readonly #endpoints: readonly SourceFile[];\n  readonly #outputPathManager = new PathManager({ extension: 'ts' });\n  readonly #owner: Plugin;\n\n  constructor(endpoints: readonly SourceFile[], owner: Plugin) {\n    this.#endpoints = endpoints;\n    this.#owner = owner;\n  }\n\n  process(): SourceFile {\n    this.#owner.logger.debug(`Generating '${this.constructor.BARREL_FILE_NAME}.ts' file`);\n\n    const { exports, imports } = this.#endpoints.reduce(\n      (acc, { fileName }) => {\n        const specifier = basename(fileName, '.ts');\n        const path = `${dirname(fileName)}/${specifier}`;\n\n        const id = acc.imports.namespace.add(acc.paths.createRelativePath(path), specifier);\n        acc.exports.named.add(specifier, false, id);\n\n        return acc;\n      },\n      new DependencyManager(new PathManager({ extension: '.js' })),\n    );\n\n    return createSourceFile(\n      [...imports.toCode(), ...exports.toCode()],\n      this.#outputPathManager.createRelativePath(this.constructor.BARREL_FILE_NAME),\n    );\n  }\n}\n"],"version":3}