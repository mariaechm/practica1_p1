{"mappings":"AAAA,OAAO,4DAA6D;AAEpE,OAAO,MAAM,uCAAuC;AAMpD,OAAO,SAAS,sBAAoD;CAClE,MAAM,SAAS,cAAc,IAAI,qCAAqC;AACtE,MAAK,QAAQ;AACX,SAAO;CACR;AAED,KAAI;AACF,SAAO,KAAK,MAAM,OAAO;CAC1B,QAAO;AAEN,SAAO;CACR;AACF;AAED,OAAO,SAAS,uBAAuBA,SAA0C;CAC/E,MAAM,WAAW,qBAAqB,IAAI,CAAE;CAC5C,MAAM,cAAc;EAClB,GAAG;EACH,GAAG;CACJ;CACD,MAAM,OAAO,KAAK,UAAU,YAAY;AACxC,eAAc,IAAI,sCAAsC,KAAK;AAC9D","names":["updates: Partial<LanguageSettings>"],"sources":["/opt/agent/work/1af72d8adc613024/hilla/packages/ts/react-i18n/src/settings.ts"],"sourcesContent":["import CookieManager from '@vaadin/hilla-frontend/CookieManager.js';\n\nexport const VAADIN_LANGUAGE_SETTINGS_COOKIE_NAME = 'vaadinLanguageSettings';\n\nexport interface LanguageSettings {\n  language?: string;\n}\n\nexport function getLanguageSettings(): LanguageSettings | undefined {\n  const cookie = CookieManager.get(VAADIN_LANGUAGE_SETTINGS_COOKIE_NAME);\n  if (!cookie) {\n    return undefined;\n  }\n\n  try {\n    return JSON.parse(cookie);\n  } catch {\n    // Ignore\n    return undefined;\n  }\n}\n\nexport function updateLanguageSettings(updates: Partial<LanguageSettings>): void {\n  const settings = getLanguageSettings() ?? {};\n  const newSettings = {\n    ...settings,\n    ...updates,\n  };\n  const json = JSON.stringify(newSettings);\n  CookieManager.set(VAADIN_LANGUAGE_SETTINGS_COOKIE_NAME, json);\n}\n"],"version":3}